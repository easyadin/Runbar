/**
 * Common folders/files to ignore during service discovery
 */
export const serviceIgnorePatterns = [
  '.git',
  'node_modules',
  '.DS_Store',
  '.next',
  'dist',
  'build',
  'out',
  'coverage',
  'logs',
  'tmp',
  '__pycache__',
  '.cache',
  '.vscode',
  '.idea',
  'target', // Maven/Gradle build directory
  'bin',
  'obj', // .NET build directory
  '.pytest_cache',
  '.mypy_cache',
  '.coverage',
  '.nyc_output',
  '.parcel-cache',
  '.webpack',
  '.nuxt',
  '.output',
  '.svelte-kit',
  '.astro',
  '.next',
  '.vercel',
  '.netlify',
  'public',
  'static',
  'assets',
  'vendor',
  'bower_components',
  'jspm_packages',
  'elm-stuff',
  'deps', // Go dependencies
  'target', // Rust build directory
  '.cargo',
  '.rustc_info.json',
  'Cargo.lock',
  'package-lock.json',
  'yarn.lock',
  'pnpm-lock.yaml',
  'Gemfile.lock',
  'Pipfile.lock',
  'poetry.lock',
  'requirements.txt.lock',
  'go.sum',
  'mix.lock',
  'composer.lock',
  'yarn-error.log',
  'npm-debug.log',
  '.env',
  '.env.local',
  '.env.development',
  '.env.test',
  '.env.production',
  '.env.example',
  '.env.template',
  '.gitignore',
  '.gitattributes',
  'README.md',
  'CHANGELOG.md',
  'LICENSE',
  'CONTRIBUTING.md',
  'CODE_OF_CONDUCT.md',
  '.editorconfig',
  '.prettierrc',
  '.eslintrc',
  '.eslintignore',
  '.prettierignore',
  'tsconfig.json',
  'tsconfig.*.json',
  'jsconfig.json',
  'webpack.config.js',
  'rollup.config.js',
  'vite.config.js',
  'vite.config.ts',
  'tailwind.config.js',
  'postcss.config.js',
  'babel.config.js',
  '.babelrc',
  '.babelrc.js',
  'jest.config.js',
  'jest.config.ts',
  'cypress.config.js',
  'cypress.config.ts',
  'playwright.config.js',
  'playwright.config.ts',
  'karma.conf.js',
  'protractor.conf.js',
  'nightwatch.conf.js',
  'wdio.conf.js',
  'selenium.conf.js',
  'testcafe.conf.js',
  'testcafe.conf.ts',
  'ava.config.js',
  'ava.config.ts',
  'mocha.opts',
  '.mocharc.js',
  '.mocharc.json',
  'nyc.config.js',
  '.nycrc',
  '.nycrc.json',
  'coveralls.yml',
  '.coveralls.yml',
  'codecov.yml',
  '.codecov.yml',
  'sonar-project.properties',
  '.sonarcloud.properties',
  '.travis.yml',
  '.github',
  '.gitlab-ci.yml',
  'azure-pipelines.yml',
  'appveyor.yml',
  'circle.yml',
  '.circleci',
  'Jenkinsfile',
  'Dockerfile.dev',
  'Dockerfile.prod',
  'docker-compose.dev.yml',
  'docker-compose.prod.yml',
  'docker-compose.override.yml',
  '.dockerignore',
  'docker-compose.override.yaml',
  'docker-compose.dev.yaml',
  'docker-compose.prod.yaml',
  'docker-compose.test.yml',
  'docker-compose.test.yaml',
  'docker-compose.ci.yml',
  'docker-compose.ci.yaml',
  'docker-compose.staging.yml',
  'docker-compose.staging.yaml',
  'docker-compose.local.yml',
  'docker-compose.local.yaml',
  'docker-compose.debug.yml',
  'docker-compose.debug.yaml',
  'docker-compose.debugging.yml',
  'docker-compose.debugging.yaml',
  'docker-compose.development.yml',
  'docker-compose.development.yaml',
  'docker-compose.production.yml',
  'docker-compose.production.yaml',
  'docker-compose.testing.yml',
  'docker-compose.testing.yaml',
  'docker-compose.ci-cd.yml',
  'docker-compose.ci-cd.yaml',
  'docker-compose.continuous-integration.yml',
  'docker-compose.continuous-integration.yaml',
  'docker-compose.continuous-deployment.yml',
  'docker-compose.continuous-deployment.yaml',
  'docker-compose.development-local.yml',
  'docker-compose.development-local.yaml',
  'docker-compose.production-local.yml',
  'docker-compose.production-local.yaml',
  'docker-compose.testing-local.yml',
  'docker-compose.testing-local.yaml',
  'docker-compose.ci-cd-local.yml',
  'docker-compose.ci-cd-local.yaml',
  'docker-compose.continuous-integration-local.yml',
  'docker-compose.continuous-integration-local.yaml',
  'docker-compose.continuous-deployment-local.yml',
  'docker-compose.continuous-deployment-local.yaml',
  'docker-compose.development-staging.yml',
  'docker-compose.development-staging.yaml',
  'docker-compose.production-staging.yml',
  'docker-compose.production-staging.yaml',
  'docker-compose.testing-staging.yml',
  'docker-compose.testing-staging.yaml',
  'docker-compose.ci-cd-staging.yml',
  'docker-compose.ci-cd-staging.yaml',
  'docker-compose.continuous-integration-staging.yml',
  'docker-compose.continuous-integration-staging.yaml',
  'docker-compose.continuous-deployment-staging.yml',
  'docker-compose.continuous-deployment-staging.yaml',
  'docker-compose.development-production.yml',
  'docker-compose.development-production.yaml',
  'docker-compose.production-production.yml',
  'docker-compose.production-production.yaml',
  'docker-compose.testing-production.yml',
  'docker-compose.testing-production.yaml',
  'docker-compose.ci-cd-production.yml',
  'docker-compose.ci-cd-production.yaml',
  'docker-compose.continuous-integration-production.yml',
  'docker-compose.continuous-integration-production.yaml',
  'docker-compose.continuous-deployment-production.yml',
  'docker-compose.continuous-deployment-production.yaml',
  'docker-compose.development-testing.yml',
  'docker-compose.development-testing.yaml',
  'docker-compose.production-testing.yml',
  'docker-compose.production-testing.yaml',
  'docker-compose.testing-testing.yml',
  'docker-compose.testing-testing.yaml',
  'docker-compose.ci-cd-testing.yml',
  'docker-compose.ci-cd-testing.yaml',
  'docker-compose.continuous-integration-testing.yml',
  'docker-compose.continuous-integration-testing.yaml',
  'docker-compose.continuous-deployment-testing.yml',
  'docker-compose.continuous-deployment-testing.yaml',
  'docker-compose.development-ci-cd.yml',
  'docker-compose.development-ci-cd.yaml',
  'docker-compose.production-ci-cd.yml',
  'docker-compose.production-ci-cd.yaml',
  'docker-compose.testing-ci-cd.yml',
  'docker-compose.testing-ci-cd.yaml',
  'docker-compose.ci-cd-ci-cd.yml',
  'docker-compose.ci-cd-ci-cd.yaml',
  'docker-compose.continuous-integration-ci-cd.yml',
  'docker-compose.continuous-integration-ci-cd.yaml',
  'docker-compose.continuous-deployment-ci-cd.yml',
  'docker-compose.continuous-deployment-ci-cd.yaml',
  'docker-compose.development-continuous-integration.yml',
  'docker-compose.development-continuous-integration.yaml',
  'docker-compose.production-continuous-integration.yml',
  'docker-compose.production-continuous-integration.yaml',
  'docker-compose.testing-continuous-integration.yml',
  'docker-compose.testing-continuous-integration.yaml',
  'docker-compose.ci-cd-continuous-integration.yml',
  'docker-compose.ci-cd-continuous-integration.yaml',
  'docker-compose.continuous-integration-continuous-integration.yml',
  'docker-compose.continuous-integration-continuous-integration.yaml',
  'docker-compose.continuous-deployment-continuous-integration.yml',
  'docker-compose.continuous-deployment-continuous-integration.yaml',
  'docker-compose.development-continuous-deployment.yml',
  'docker-compose.development-continuous-deployment.yaml',
  'docker-compose.production-continuous-deployment.yml',
  'docker-compose.production-continuous-deployment.yaml',
  'docker-compose.testing-continuous-deployment.yml',
  'docker-compose.testing-continuous-deployment.yaml',
  'docker-compose.ci-cd-continuous-deployment.yml',
  'docker-compose.ci-cd-continuous-deployment.yaml',
  'docker-compose.continuous-integration-continuous-deployment.yml',
  'docker-compose.continuous-integration-continuous-deployment.yaml',
  'docker-compose.continuous-deployment-continuous-deployment.yml',
  'docker-compose.continuous-deployment-continuous-deployment.yaml',
] as const;

export type ServiceIgnorePattern = typeof serviceIgnorePatterns[number];

/**
 * Check if a path should be ignored during service discovery
 */
export function shouldIgnorePath(path: string): boolean {
  const pathParts = path.split('/');
  return serviceIgnorePatterns.some(pattern => pathParts.includes(pattern));
}

/**
 * Get all ignore patterns
 */
export function getIgnorePatterns(): readonly string[] {
  return serviceIgnorePatterns;
} 